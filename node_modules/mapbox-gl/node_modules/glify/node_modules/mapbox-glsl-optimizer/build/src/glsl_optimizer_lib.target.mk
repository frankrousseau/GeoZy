# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := glsl_optimizer_lib
DEFS_Debug := \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/john/.node-gyp/0.10.32/src \
	-I/Users/john/.node-gyp/0.10.32/deps/uv/include \
	-I/Users/john/.node-gyp/0.10.32/deps/v8/include \
	-I$(srcdir)/src/glsl \
	-I$(srcdir)/src/mesa \
	-I$(srcdir)/include

DEFS_Release := \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/john/.node-gyp/0.10.32/src \
	-I/Users/john/.node-gyp/0.10.32/deps/uv/include \
	-I/Users/john/.node-gyp/0.10.32/deps/v8/include \
	-I$(srcdir)/src/glsl \
	-I$(srcdir)/src/mesa \
	-I$(srcdir)/include

OBJS := \
	$(obj).target/$(TARGET)/src/glsl/glcpp/glcpp-lex.o \
	$(obj).target/$(TARGET)/src/glsl/glcpp/glcpp-parse.o \
	$(obj).target/$(TARGET)/src/glsl/glcpp/pp.o \
	$(obj).target/$(TARGET)/src/glsl/ast_array_index.o \
	$(obj).target/$(TARGET)/src/glsl/ast_expr.o \
	$(obj).target/$(TARGET)/src/glsl/ast_function.o \
	$(obj).target/$(TARGET)/src/glsl/ast_to_hir.o \
	$(obj).target/$(TARGET)/src/glsl/ast_type.o \
	$(obj).target/$(TARGET)/src/glsl/builtin_functions.o \
	$(obj).target/$(TARGET)/src/glsl/builtin_types.o \
	$(obj).target/$(TARGET)/src/glsl/builtin_variables.o \
	$(obj).target/$(TARGET)/src/glsl/glsl_lexer.o \
	$(obj).target/$(TARGET)/src/glsl/glsl_optimizer.o \
	$(obj).target/$(TARGET)/src/glsl/glsl_parser.o \
	$(obj).target/$(TARGET)/src/glsl/glsl_parser_extras.o \
	$(obj).target/$(TARGET)/src/glsl/glsl_symbol_table.o \
	$(obj).target/$(TARGET)/src/glsl/glsl_types.o \
	$(obj).target/$(TARGET)/src/glsl/hir_field_selection.o \
	$(obj).target/$(TARGET)/src/glsl/ir.o \
	$(obj).target/$(TARGET)/src/glsl/ir_stats.o \
	$(obj).target/$(TARGET)/src/glsl/ir_basic_block.o \
	$(obj).target/$(TARGET)/src/glsl/ir_builder.o \
	$(obj).target/$(TARGET)/src/glsl/ir_clone.o \
	$(obj).target/$(TARGET)/src/glsl/ir_constant_expression.o \
	$(obj).target/$(TARGET)/src/glsl/ir_equals.o \
	$(obj).target/$(TARGET)/src/glsl/ir_expression_flattening.o \
	$(obj).target/$(TARGET)/src/glsl/ir_function.o \
	$(obj).target/$(TARGET)/src/glsl/ir_function_can_inline.o \
	$(obj).target/$(TARGET)/src/glsl/ir_function_detect_recursion.o \
	$(obj).target/$(TARGET)/src/glsl/ir_hierarchical_visitor.o \
	$(obj).target/$(TARGET)/src/glsl/ir_hv_accept.o \
	$(obj).target/$(TARGET)/src/glsl/ir_import_prototypes.o \
	$(obj).target/$(TARGET)/src/glsl/ir_print_glsl_visitor.o \
	$(obj).target/$(TARGET)/src/glsl/ir_print_visitor.o \
	$(obj).target/$(TARGET)/src/glsl/ir_rvalue_visitor.o \
	$(obj).target/$(TARGET)/src/glsl/ir_unused_structs.o \
	$(obj).target/$(TARGET)/src/glsl/ir_validate.o \
	$(obj).target/$(TARGET)/src/glsl/ir_variable_refcount.o \
	$(obj).target/$(TARGET)/src/glsl/link_atomics.o \
	$(obj).target/$(TARGET)/src/glsl/link_functions.o \
	$(obj).target/$(TARGET)/src/glsl/link_interface_blocks.o \
	$(obj).target/$(TARGET)/src/glsl/link_uniform_block_active_visitor.o \
	$(obj).target/$(TARGET)/src/glsl/link_uniform_blocks.o \
	$(obj).target/$(TARGET)/src/glsl/link_uniform_initializers.o \
	$(obj).target/$(TARGET)/src/glsl/link_uniforms.o \
	$(obj).target/$(TARGET)/src/glsl/link_varyings.o \
	$(obj).target/$(TARGET)/src/glsl/linker.o \
	$(obj).target/$(TARGET)/src/glsl/loop_analysis.o \
	$(obj).target/$(TARGET)/src/glsl/loop_controls.o \
	$(obj).target/$(TARGET)/src/glsl/loop_unroll.o \
	$(obj).target/$(TARGET)/src/glsl/lower_clip_distance.o \
	$(obj).target/$(TARGET)/src/glsl/lower_discard.o \
	$(obj).target/$(TARGET)/src/glsl/lower_discard_flow.o \
	$(obj).target/$(TARGET)/src/glsl/lower_if_to_cond_assign.o \
	$(obj).target/$(TARGET)/src/glsl/lower_instructions.o \
	$(obj).target/$(TARGET)/src/glsl/lower_jumps.o \
	$(obj).target/$(TARGET)/src/glsl/lower_mat_op_to_vec.o \
	$(obj).target/$(TARGET)/src/glsl/lower_noise.o \
	$(obj).target/$(TARGET)/src/glsl/lower_packed_varyings.o \
	$(obj).target/$(TARGET)/src/glsl/lower_packing_builtins.o \
	$(obj).target/$(TARGET)/src/glsl/lower_output_reads.o \
	$(obj).target/$(TARGET)/src/glsl/lower_ubo_reference.o \
	$(obj).target/$(TARGET)/src/glsl/lower_variable_index_to_cond_assign.o \
	$(obj).target/$(TARGET)/src/glsl/lower_vec_index_to_cond_assign.o \
	$(obj).target/$(TARGET)/src/glsl/lower_vec_index_to_swizzle.o \
	$(obj).target/$(TARGET)/src/glsl/lower_vector.o \
	$(obj).target/$(TARGET)/src/glsl/lower_vector_insert.o \
	$(obj).target/$(TARGET)/src/glsl/lower_named_interface_blocks.o \
	$(obj).target/$(TARGET)/src/glsl/opt_algebraic.o \
	$(obj).target/$(TARGET)/src/glsl/opt_array_splitting.o \
	$(obj).target/$(TARGET)/src/glsl/opt_constant_folding.o \
	$(obj).target/$(TARGET)/src/glsl/opt_constant_propagation.o \
	$(obj).target/$(TARGET)/src/glsl/opt_constant_variable.o \
	$(obj).target/$(TARGET)/src/glsl/opt_copy_propagation.o \
	$(obj).target/$(TARGET)/src/glsl/opt_copy_propagation_elements.o \
	$(obj).target/$(TARGET)/src/glsl/opt_cse.o \
	$(obj).target/$(TARGET)/src/glsl/opt_dead_code.o \
	$(obj).target/$(TARGET)/src/glsl/opt_dead_code_local.o \
	$(obj).target/$(TARGET)/src/glsl/opt_dead_functions.o \
	$(obj).target/$(TARGET)/src/glsl/opt_flatten_nested_if_blocks.o \
	$(obj).target/$(TARGET)/src/glsl/opt_function_inlining.o \
	$(obj).target/$(TARGET)/src/glsl/opt_if_simplification.o \
	$(obj).target/$(TARGET)/src/glsl/opt_noop_swizzle.o \
	$(obj).target/$(TARGET)/src/glsl/opt_redundant_jumps.o \
	$(obj).target/$(TARGET)/src/glsl/opt_structure_splitting.o \
	$(obj).target/$(TARGET)/src/glsl/opt_swizzle_swizzle.o \
	$(obj).target/$(TARGET)/src/glsl/opt_tree_grafting.o \
	$(obj).target/$(TARGET)/src/glsl/opt_vectorize.o \
	$(obj).target/$(TARGET)/src/glsl/opt_vector_splitting.o \
	$(obj).target/$(TARGET)/src/glsl/opt_flip_matrices.o \
	$(obj).target/$(TARGET)/src/glsl/opt_dead_builtin_varyings.o \
	$(obj).target/$(TARGET)/src/glsl/ralloc.o \
	$(obj).target/$(TARGET)/src/glsl/s_expression.o \
	$(obj).target/$(TARGET)/src/glsl/standalone_scaffolding.o \
	$(obj).target/$(TARGET)/src/glsl/strtod.o \
	$(obj).target/$(TARGET)/src/mesa/main/hash_table.o \
	$(obj).target/$(TARGET)/src/mesa/main/imports.o \
	$(obj).target/$(TARGET)/src/mesa/program/prog_hash_table.o \
	$(obj).target/$(TARGET)/src/mesa/program/symbol_table.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-L$(builddir)

LIBTOOLFLAGS_Debug :=

LDFLAGS_Release := \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-L$(builddir)

LIBTOOLFLAGS_Release :=

LIBS := \
	-undefined dynamic_lookup

$(builddir)/glsl_optimizer_lib.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/glsl_optimizer_lib.a: LIBS := $(LIBS)
$(builddir)/glsl_optimizer_lib.a: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/glsl_optimizer_lib.a: TOOLSET := $(TOOLSET)
$(builddir)/glsl_optimizer_lib.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(builddir)/glsl_optimizer_lib.a
# Add target alias
.PHONY: glsl_optimizer_lib
glsl_optimizer_lib: $(builddir)/glsl_optimizer_lib.a

# Add target alias to "all" target.
.PHONY: all
all: glsl_optimizer_lib

# Add target alias
.PHONY: glsl_optimizer_lib
glsl_optimizer_lib: $(builddir)/glsl_optimizer_lib.a

# Short alias for building this static library.
.PHONY: glsl_optimizer_lib.a
glsl_optimizer_lib.a: $(builddir)/glsl_optimizer_lib.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/glsl_optimizer_lib.a

